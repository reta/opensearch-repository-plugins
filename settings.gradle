/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 *
 * Modifications Copyright OpenSearch Contributors. See
 * GitHub history for details.
 */

pluginManagement {
  repositories {
    gradlePluginPortal()
    maven { 
      url "https://aws.oss.sonatype.org/content/repositories/snapshots"
      mavenContent {
        snapshotsOnly()
      } 
    }
  }
}

dependencyResolutionManagement {
  repositories {
    mavenLocal()
    maven { 
      url "https://aws.oss.sonatype.org/content/repositories/snapshots"
      mavenContent {
        snapshotsOnly()
      } 
    }
    mavenCentral()
  }
}



rootProject.name = "opensearch-repository-plugins"

List projects = [
  'test:fixtures:azure-fixture',
  'test:fixtures:gcs-fixture',
  'test:fixtures:s3-fixture',
  'test:fixtures:minio-fixture',
  'test:fixtures:hdfs-fixture',
  'test:fixtures:krb5kdc-fixture'
]

/**
 * Iterates over sub directories, looking for build.gradle, and adds a project if found
 * for that dir with the given path prefix. Note that this requires each level
 * of the dir hierarchy to have a build.gradle. Otherwise we would have to iterate
 * all files/directories in the source tree to find all projects.
 */
void addSubProjects(String path, File dir) {
  if (dir.isDirectory() == false) return;
  if (new File(dir, 'build.gradle').exists() == false) return;
  if (findProject(dir) != null) return;

  final String projectName = "${path}:${dir.name}"
  include projectName
  if (path.isEmpty()) {
    project(projectName).projectDir = dir
  }
  for (File subdir : dir.listFiles()) {
    addSubProjects(projectName, subdir)
  }
}

addSubProjects('', new File(rootProject.projectDir, 'plugins'))

include projects.toArray(new String[0])
